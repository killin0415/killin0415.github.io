I"N<h6 id="tags-apcscamp-week1-枚舉-二分搜尋法">tags: <code class="language-plaintext highlighter-rouge">APCScamp week1</code> <code class="language-plaintext highlighter-rouge">枚舉</code> <code class="language-plaintext highlighter-rouge">二分搜尋法</code></h6>

<h3 id="枚舉">枚舉</h3>

<h5 id="顧名思義就是將所有情況一一列舉出來由於時間複雜度的關係枚舉往往不是一個好的寫法但如果透過剪枝加速等動作也許可以撈到部分分數或者是ac">顧名思義，就是將所有情況一一列舉出來，由於時間複雜度的關係，枚舉往往不是一個好的寫法，但如果透過剪枝、加速等動作，也許可以撈到部分分數或者是AC。</h5>

<h3 id="二分搜尋法">二分搜尋法</h3>

<h5 id="一般搜尋有兩種方法線性搜尋跟二分搜尋線性搜尋就是很直覺的跑on次找到我們要的目標但配合其他程式碼時間複雜度往往會來到on2甚至更高因此我們需要一種新的搜尋法二分搜尋法">一般搜尋有兩種方法：線性搜尋跟二分搜尋。線性搜尋就是很直覺的跑O(N)次找到我們要的目標，但配合其他程式碼，時間複雜度往往會來到O(\(N^2\))甚至更高，因此我們需要一種新的搜尋法──二分搜尋法。</h5>
<p>二分搜尋法透過以下操作：</p>
<ol>
  <li>建立中心點</li>
  <li>如果比他大往右邊找，反之</li>
  <li>以此遞迴下去</li>
</ol>

<p>透過分治的概念，達成二分搜的想法，完成O(\(\log_{}n\))的搜尋演算法。</p>

<p>C++有內建函數 lower_bound(),upper_bound()等函數可以達成二分搜。</p>

<hr />
<p>APCS 1月第三題：切割費用</p>

<p>有一根長度為 L 的棍子，你會把這個棍子切割 n 次。</p>

<p>假設一開始棍子左端放在數線上 0 的位置，棍子的右端放在數線上 L 的位置，每次的切割會給定一個介於 0 到 L 的數字表示要切個的位置，你要把穿過個這位置的棍子切成兩段，而所需的花費就等於所切割的棍子的長度。</p>

<p>第一行有兩個整數 n,L。</p>

<p>接下來 n 行每行有兩個整數 x,i，表示 x 位置被切過一刀，而這刀是全部的切割中的第 i 刀，保證 i 是介於 [1,n] 的整數且不會重複。</p>

<p>輸出一個整數表示總共的切割費用，答案可能超過 \(2^{31}\) 但不會超過\(2^{60}\)。</p>

<hr />
<p>想法是透過set存取每一刀的位置，並二分搜上一刀的位置找出這一到所位於的線段，再將答案存起來</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include&lt;bits/stdc++.h&gt;
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="cp">#define potato ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define pb emplace_back
#define mp make_pair
#define pii pair&lt;int,int&gt;
</span>
<span class="n">set</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">s</span><span class="p">;</span>
<span class="n">vector</span><span class="o">&lt;</span><span class="n">pii</span><span class="o">&gt;</span> <span class="n">vec</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">n</span><span class="p">,</span><span class="n">len</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">r</span><span class="p">,</span><span class="n">l</span><span class="p">,</span><span class="n">ans</span><span class="p">,</span><span class="n">key</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">potato</span><span class="p">;</span>
    <span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">n</span><span class="o">&gt;&gt;</span><span class="n">len</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">y</span><span class="o">&gt;&gt;</span><span class="n">x</span><span class="p">;</span><span class="c1">//存取每一刀的位置</span>
        <span class="n">vec</span><span class="p">.</span><span class="n">pb</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="n">sort</span><span class="p">(</span><span class="n">vec</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span><span class="n">vec</span><span class="p">.</span><span class="n">end</span><span class="p">());</span><span class="c1">//依刀的順序排序</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">key</span><span class="o">=</span><span class="n">vec</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">second</span><span class="p">;</span>
        <span class="k">auto</span> <span class="n">it</span> <span class="o">=</span> <span class="n">s</span><span class="p">.</span><span class="n">lower_bound</span><span class="p">(</span><span class="n">key</span><span class="p">);</span><span class="c1">//找到上一刀的位置</span>
        
        <span class="k">if</span><span class="p">(</span><span class="n">it</span> <span class="o">!=</span> <span class="n">s</span><span class="p">.</span><span class="n">end</span><span class="p">())</span> <span class="n">r</span> <span class="o">=</span> <span class="o">*</span><span class="n">it</span><span class="p">;</span><span class="c1">//如果有找到就將右界設在這一刀</span>
        <span class="k">else</span> <span class="n">r</span> <span class="o">=</span> <span class="n">len</span><span class="p">;</span><span class="c1">//否則右界設在末端</span>
        
        <span class="k">if</span><span class="p">(</span><span class="n">it</span> <span class="o">!=</span> <span class="n">s</span><span class="p">.</span><span class="n">begin</span><span class="p">())</span> <span class="n">l</span> <span class="o">=</span> <span class="o">*--</span><span class="n">it</span><span class="p">;</span><span class="c1">//如果有找到就將左界設在這一刀前面的位置 </span>
        <span class="k">else</span> <span class="n">l</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span><span class="c1">//否則設在最前端</span>
        
        <span class="n">ans</span> <span class="o">+=</span> <span class="n">r</span> <span class="o">-</span> <span class="n">l</span> <span class="p">;</span><span class="c1">//兩邊相減求線段長度</span>
        <span class="n">s</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">key</span><span class="p">);</span><span class="c1">//把現在這刀存起來   </span>
    <span class="p">}</span>
     <span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">ans</span><span class="p">;</span>       
<span class="p">}</span>
</code></pre></div></div>

:ET